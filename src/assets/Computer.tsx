/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    motherboard: THREE.Mesh
    Cube002: THREE.Mesh
    Cube002_1: THREE.Mesh
    Cube002_2: THREE.Mesh
    io: THREE.Mesh
    motherboard_gpu_io: THREE.Mesh
    motherboard_cpu_io: THREE.Mesh
    Cube009: THREE.Mesh
    Cube009_1: THREE.Mesh
    Cube009_2: THREE.Mesh
    Cube011: THREE.Mesh
    Cube011_1: THREE.Mesh
    ssd: THREE.Mesh
    cpu: THREE.Mesh
    ram_io: THREE.Mesh
    gpu_fan: THREE.Mesh
    cpu_fan: THREE.Mesh
    psu: THREE.Mesh
  }
  materials: {
    green: THREE.MeshStandardMaterial
    blue: THREE.MeshStandardMaterial
    metal: THREE.MeshStandardMaterial
    gold: THREE.MeshStandardMaterial
    white: THREE.MeshStandardMaterial
    red: THREE.MeshStandardMaterial
    sand: THREE.MeshStandardMaterial
    light_metal: THREE.MeshStandardMaterial
    brown: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/computer.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh name="motherboard" geometry={nodes.motherboard.geometry} material={materials.green} />
      <group name="gpu" position={[0.003, -0.076, 0.061]}>
        <mesh name="Cube002" geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} />
        <mesh name="Cube002_1" geometry={nodes.Cube002_1.geometry} material={nodes.Cube002_1.material} />
        <mesh name="Cube002_2" geometry={nodes.Cube002_2.geometry} material={nodes.Cube002_2.material} />
      </group>
      <mesh name="io" geometry={nodes.io.geometry} material={nodes.io.material} position={[-0.092, 0.014, 0.032]} />
      <mesh
        name="motherboard_gpu_io"
        geometry={nodes.motherboard_gpu_io.geometry}
        material={nodes.motherboard_gpu_io.material}
        position={[-0.044, -0.077, 0.009]}
      />
      <mesh
        name="motherboard_cpu_io"
        geometry={nodes.motherboard_cpu_io.geometry}
        material={materials.white}
        position={[0, 0, 0.005]}
      />
      <group name="ram" position={[0.068, 0.013, 0.047]}>
        <mesh name="Cube009" geometry={nodes.Cube009.geometry} material={nodes.Cube009.material} />
        <mesh name="Cube009_1" geometry={nodes.Cube009_1.geometry} material={nodes.Cube009_1.material} />
        <mesh name="Cube009_2" geometry={nodes.Cube009_2.geometry} material={materials.red} />
      </group>
      <group name="cpu_cooler" position={[0, 0, 0.037]}>
        <mesh name="Cube011" geometry={nodes.Cube011.geometry} material={nodes.Cube011.material} />
        <mesh name="Cube011_1" geometry={nodes.Cube011_1.geometry} material={materials.sand} />
      </group>
      <mesh name="ssd" geometry={nodes.ssd.geometry} material={nodes.ssd.material} position={[-0.002, 0.062, 0.016]} />
      <mesh name="cpu" geometry={nodes.cpu.geometry} material={nodes.cpu.material} position={[0, 0, 0.012]} />
      <mesh
        name="ram_io"
        geometry={nodes.ram_io.geometry}
        material={nodes.ram_io.material}
        position={[0.078, 0.013, 0.008]}
      />
      <mesh
        name="gpu_fan"
        geometry={nodes.gpu_fan.geometry}
        material={materials.light_metal}
        position={[0.07, -0.065, 0.064]}
      />
      <mesh name="cpu_fan" geometry={nodes.cpu_fan.geometry} material={materials.brown} position={[0, 0, 0.045]} />
      <mesh name="psu" geometry={nodes.psu.geometry} material={nodes.psu.material} position={[0.002, 0.159, 0.04]} />
    </group>
  )
}

useGLTF.preload('/computer.glb')
